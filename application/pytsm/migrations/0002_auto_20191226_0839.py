# Generated by Django 3.0.1 on 2019-12-26 07:39

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pytsm', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cfgcolors',
            name='value',
            field=models.CharField(help_text='RGB value of the color.', max_length=7, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='cfgconfig',
            name='confkey',
            field=models.CharField(help_text='Key that is stuck in the application.', max_length=35, verbose_name='Config Key'),
        ),
        migrations.AlterField(
            model_name='cfgconfig',
            name='confval',
            field=models.CharField(help_text='key value', max_length=255, verbose_name='Config Value'),
        ),
        migrations.AlterField(
            model_name='cfgconfig',
            name='description',
            field=models.CharField(help_text='Description of the key value.', max_length=255, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='checks',
            field=models.BooleanField(default=True, help_text='Bevor you make updates or other test on TSM Server stop the checks.', verbose_name='Run Queries'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='default',
            field=models.BooleanField(default=False, help_text='If no other server selected, than this server is the default server.', verbose_name='Default'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='description',
            field=models.CharField(help_text='Normaly the instanz name', max_length=35, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='instanzname',
            field=models.CharField(default='tsminst1', help_text='Get the server instanzname (Host Alias)', max_length=35, verbose_name='Instanzname'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='ip',
            field=models.CharField(help_text='Networkaddress', max_length=15, verbose_name='IP'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='libraryclient',
            field=models.BooleanField(default=False, help_text='If the server a librarymanager then True', verbose_name='Libraryclient'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='password',
            field=models.CharField(help_text='Password', max_length=35, verbose_name='Password'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='port',
            field=models.PositiveSmallIntegerField(default=1500, help_text='Port normaly 1500', verbose_name='Port'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='servername',
            field=models.CharField(db_index=True, help_text='Get the servername (Host Alias)', max_length=35, verbose_name='Servername'),
        ),
        migrations.AlterField(
            model_name='cfgserver',
            name='username',
            field=models.CharField(help_text='Username with use to query the server', max_length=35, verbose_name='Username'),
        ),
    ]
