# Generated by Django 3.0.1 on 2019-12-29 00:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pytsm', '0016_auto_20191229_0044'),
    ]

    operations = [
        migrations.CreateModel(
            name='CfgPytsmMainmenu',
            fields=[
                ('cfg_pytsm_mainmenu_id', models.IntegerField(auto_created=True, default=0, primary_key=True, serialize=False)),
                ('cfg_pytsm_base_name', models.CharField(default='CFG_', help_text='Name that is used internally.', max_length=35, unique=True, verbose_name='Name')),
                ('cfg_pytsm_base_label', models.CharField(default='label', help_text='Label for the visible HTML page.', max_length=35, verbose_name='Label')),
                ('cfg_pytsm_base_sortorder', models.SmallIntegerField(default=10, help_text='Sort order of the output.', verbose_name='Sort')),
            ],
            options={
                'verbose_name': 'Mainmenu',
                'verbose_name_plural': 'Mainmenues',
                'db_table': 'cfg_pytsm_mainmenu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CfgPytsmOverview',
            fields=[
                ('cfg_pytsm_overview_id', models.IntegerField(auto_created=True, default=0, primary_key=True, serialize=False)),
                ('cfg_pytsm_base_name', models.CharField(default='CFG_', help_text='Name that is used internally.', max_length=35, unique=True, verbose_name='Name')),
                ('cfg_pytsm_base_label', models.CharField(default='label', help_text='Label for the visible HTML page.', max_length=35, verbose_name='Label')),
                ('cfg_pytsm_base_sortorder', models.SmallIntegerField(default=10, help_text='Sort order of the output.', verbose_name='Sort')),
                ('cfg_pytsm_base_alert_cmp', models.CharField(blank=True, help_text='Set alarm compare.', max_length=35, null=True, verbose_name='Alert Compare')),
                ('cfg_pytsm_base_alert_val', models.CharField(blank=True, help_text='Set alarm value.', max_length=35, null=True, verbose_name='Alert Value')),
                ('cfg_pytsm_base_alert_col', models.CharField(blank=True, help_text='Comparison field for the alarm', max_length=35, null=True, verbose_name='Alert Column')),
                ('cfg_pytsm_overview_query', models.CharField(help_text='', max_length=255, verbose_name='Overvie Query')),
                ('cfg_pytsm_overview_unit', models.CharField(help_text='', max_length=10, null=True, verbose_name='Unit')),
                ('cfg_pytsm_overview_notforlibclient', models.BooleanField(default=False, help_text='', verbose_name='Not for libclient.')),
                ('cfg_pytsm_overview_pollfreq', models.PositiveSmallIntegerField(default=200, help_text='', verbose_name='poll freq.')),
            ],
            options={
                'verbose_name': 'Overviewquery',
                'verbose_name_plural': 'Overviewqueries',
                'db_table': 'cfg_pytsm_overview',
            },
        ),
        migrations.CreateModel(
            name='CfgPytsmOverviewbox',
            fields=[
                ('cfg_pytsm_overviewbox_id', models.IntegerField(auto_created=True, default=0, primary_key=True, serialize=False)),
                ('cfg_pytsm_base_name', models.CharField(default='CFG_', help_text='Name that is used internally.', max_length=35, unique=True, verbose_name='Name')),
                ('cfg_pytsm_base_label', models.CharField(default='label', help_text='Label for the visible HTML page.', max_length=35, verbose_name='Label')),
                ('cfg_pytsm_base_sortorder', models.SmallIntegerField(default=10, help_text='Sort order of the output.', verbose_name='Sort')),
            ],
            options={
                'verbose_name': 'Overviewbox',
                'verbose_name_plural': 'Overviewboxes',
                'db_table': 'cfg_pytsm_overviewbox',
            },
        ),
        migrations.CreateModel(
            name='CfgPytsmServer',
            fields=[
                ('cfg_pytsm_server_id', models.IntegerField(auto_created=True, default=0, primary_key=True, serialize=False)),
                ('cfg_pytsm_server_servername', models.CharField(db_index=True, help_text='Get the servername (Host Alias)', max_length=35, verbose_name='Servername')),
                ('cfg_pytsm_server_instanzname', models.CharField(default='tsminst1', help_text='Get the server instanzname (Host Alias)', max_length=35, verbose_name='Instanzname')),
                ('cfg_pytsm_server_description', models.CharField(help_text='Normaly the instanz name', max_length=35, null=True, verbose_name='Description')),
                ('cfg_pytsm_server_ip', models.CharField(help_text='Networkaddress', max_length=15, verbose_name='IP')),
                ('cfg_pytsm_server_port', models.PositiveSmallIntegerField(default=1500, help_text='Port normaly 1500', verbose_name='Port')),
                ('cfg_pytsm_server_username', models.CharField(help_text='Username with use to query the server', max_length=35, verbose_name='Username')),
                ('cfg_pytsm_server_password', models.CharField(help_text='Password', max_length=35, verbose_name='Password')),
                ('cfg_pytsm_server_libraryclient', models.BooleanField(default=False, help_text='If the server a librarymanager then True', verbose_name='Libraryclient')),
                ('cfg_pytsm_server_default', models.BooleanField(default=False, help_text='If no other server selected, than this server is the default server.', verbose_name='Default')),
                ('cfg_pytsm_server_checks', models.BooleanField(default=True, help_text='Bevor you make updates or other test on TSM Server stop the checks.', verbose_name='Run Queries')),
            ],
            options={
                'verbose_name': 'Server',
                'verbose_name_plural': 'Servers',
                'db_table': 'cfg_pytsm_server',
                'unique_together': {('cfg_pytsm_server_servername', 'cfg_pytsm_server_instanzname', 'cfg_pytsm_server_port')},
            },
        ),
        migrations.DeleteModel(
            name='CfgMainmenu',
        ),
        migrations.RemoveField(
            model_name='cfgoverview',
            name='parent',
        ),
        migrations.DeleteModel(
            name='CfgServer',
        ),
        migrations.AlterField(
            model_name='joblist',
            name='lastrun',
            field=models.DateTimeField(help_text='', verbose_name='Lastrun'),
        ),
        migrations.AlterField(
            model_name='joblist',
            name='nextrun',
            field=models.DateTimeField(help_text='', verbose_name='Nextrun'),
        ),
        migrations.AlterField(
            model_name='joblist',
            name='pid',
            field=models.IntegerField(help_text='', null=True, verbose_name='Pid'),
        ),
        migrations.AlterField(
            model_name='joblist',
            name='servername',
            field=models.CharField(help_text='', max_length=35, verbose_name='Servername'),
        ),
        migrations.AlterField(
            model_name='joblist',
            name='status',
            field=models.CharField(blank=True, help_text='', max_length=35, null=True, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='logpolldstat',
            name='enabled',
            field=models.BooleanField(default=True, help_text='', verbose_name='Enabled'),
        ),
        migrations.AlterField(
            model_name='logpolldstat',
            name='lastrun',
            field=models.DateTimeField(help_text='', verbose_name='Lastrun'),
        ),
        migrations.AlterField(
            model_name='logpolldstat',
            name='nextrun',
            field=models.DateTimeField(help_text='', verbose_name='Nextrun'),
        ),
        migrations.AlterField(
            model_name='logpolldstat',
            name='status',
            field=models.CharField(blank=True, help_text='', max_length=35, null=True, verbose_name='Status'),
        ),
        migrations.DeleteModel(
            name='CfgOverview',
        ),
        migrations.DeleteModel(
            name='CfgOverviewbox',
        ),
        migrations.AddField(
            model_name='cfgpytsmoverview',
            name='cfg_pytsm_overview_parent',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='pytsm.CfgPytsmOverviewbox', verbose_name='Parent'),
        ),
    ]
