create table cfg_pytsm_overview
(
    cfg_pytsm_overview_id              integer,
    cfg_pytsm_base_name                varchar(255),
    cfg_pytsm_base_label               varchar(255),
    cfg_pytsm_base_sortorder           smallint,
    cfg_pytsm_base_alert_cmp           varchar(255),
    cfg_pytsm_base_alert_val           varchar(255),
    cfg_pytsm_base_alert_col           varchar(255),
    cfg_pytsm_overview_query           varchar(255),
    cfg_pytsm_overview_notforlibclient text,
    cfg_pytsm_overview_pollfreq        text,
    cfg_pytsm_overview_parent_id       smallint,
    cfg_pytsm_overview_unit            varchar(255)
);

alter table cfg_pytsm_overview
    owner to postgres;

INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (1, 'CFG_PYTSM_TOTAL_DATA_STORED', 'LB_PYTSM_TOTAL_DATA_STORED', 10, null, null, null, 'SELECT CAST(FLOAT(SUM(logical_mb)) / 1024 / 1024 AS DEC(8,3)) FROM occupancy', '0', '3', 3, 'TB');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (2, 'CFG_PYTSM_TOTAL_DATA_BACKUPED', 'LB_PYTSM_TOTAL_DATA_BACKUPED', 20, null, null, null, 'select ''''N/A'''' from status', '0', '3', 3, 'TB');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (3, 'CFG_PYTSM_TOTAL_DATA_ARCHIVED', 'LB_PYTSM_TOTAL_DATA_ARCHIVED', 30, null, null, null, 'select ''''N/A'''' from status', '0', '3', 3, 'TB');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (4, 'CFG_PYTSM_HEALTH_DATA_SCRATCH_TAPES', 'LB_PYTSM_HEALTH_DATA_SCRATCH_TAPES', 10, 'less', '10', 'alarm', '''SELECT COUNT(*) FROM libvolumes WHERE status=''Scratch''', '1', '3', 1, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (5, 'CFG_PYTSM_HEALTH_DATA_VOLUMES_WITH_ERRORS', 'LB_PYTSM_HEALTH_DATA_VOLUMES_WITH_ERRORS', 20, 'more', '0', 'alarm', '''SELECT COUNT(*) FROM volumes WHERE error_state=''YES''', '0', '3', 1, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (6, 'CFG_PYTSM_HEALTH_DATA_UNAVAILABLE_VOLUMES', 'LB_PYTSM_HEALTH_DATA_UNAVAILABLE_VOLUMES', 30, 'more', '0', 'alarm', '''SELECT COUNT(*) FROM volumes WHERE access=''UNAVAILABLE''', '0', '3', 1, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (7, 'CFG_PYTSM_HEALTH_DATA_DRIVES_OFFLINE', 'LB_PYTSM_HEALTH_DATA_DRIVES_OFFLINE', 40, 'more', '0', 'alarm', 'SELECT COUNT(*) FROM drives WHERE NOT online=''YES''', '1', '3', 1, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (8, 'CFG_PYTSM_HEALTH_DATA_PATHS_OFFLINE', 'LB_PYTSM_HEALTH_DATA_PATHS_OFFLINE', 50, 'more', '0', 'alarm', 'SELECT COUNT(*) FROM paths WHERE NOT online=''YES''', '1', '3', 1, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (9, 'CFG_PYTSM_DATABASE_CHACHE_HIT', 'LB_PYTSM_DATABASE_CHACHE_HIT', 10, 'less', '98.0', 'warn', 'SELECT BUFF_HIT_RATIO from db', '0', '3', 2, '%');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (10, 'CFG_PYTSM_DATABASE_USAGE', 'LB_PYTSM_DATABASE_USAGE', 20, 'more', '90.0', 'alarm', 'select used_db_space_mb*100/free_space_mb from db', '0', '3', 2, '%');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (11, 'CFG_PYTSM_DATABASE_LOG_USAGE', 'LB_PYTSM_DATABASE_LOG_USAGE', 30, 'more', '90.0', 'alarm', 'select used_space_mb*100/free_space_mb from log', '0', '3', 2, '%');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (12, 'CFG_PYTSM_DATABASE_DB_FRAGMENTATION', 'LB_PYTSM_DATABASE_DB_FRAGMENTATION', 40, 'more', '10.0', 'alarm', 'select ''N/A'' from status', '0', '3', 2, '%');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (13, 'CFG_PYTSM_DB_VOLUMES_NOT_SYNCED', 'LB_PYTSM_DB_VOLUMES_NOT_SYNCED', 50, 'more', '0', 'alarm', 'select ''N/A'' from status', '0', '3', 2, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (14, 'CFG_PYTSM_DATABASE_LOG_NOT_SYNCED', 'LB_PYTSM_DATABASE_LOG_NOT_SYNCED', 60, 'more', '0', 'alarm', 'select ''N/A'' from status', '0', '3', 2, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (15, 'CFG_PYTSM_DB_BACKUP', 'LB_PYTSM_DB_BACKUP', 70, null, null, null, 'SELECT last_backup_date FROM db', '0', '3', 2, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (16, 'CFG_PYTSM_SCHEDULES_FAILED_ADMIN', 'LB_PYTSM_SCHEDULES_FAILED_ADMIN', 10, 'more', '0', 'alarm', 'SELECT count(*) FROM events WHERE status <> ''Completed'' AND status <> ''Future'' AND status <> ''Started'' AND status <> ''Restarted'' and status <> ''In Progres'' and status <> ''Pending'' AND NODE_NAME is NOT NULL', '0', '3', 4, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (17, 'CFG_PYTSM_SCHEDULES_FAILED_CLIENT', 'LB_PYTSM_SCHEDULES_FAILED_CLIENT', 20, 'more', '0', 'alarm', 'SELECT count(*) FROM events WHERE status NOTEQUAL ''Completed'' AND status NOTEQUAL ''Future'' AND status NOTEQUAL ''Started'' AND status NOTEQUAL ''Restarted'' and status NOTEQUAL ''In Progres'' and status NOTEQUAL ''Pending'' AND NODE_NAME is NOT NULL', '0', '3', 4, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (18, 'CFG_PYTSM_SCHEDULES_RUNNING_CLIENT', 'LB_PYTSM_SCHEDULES_RUNNING_CLIENT', 30, 'more', '0', 'warn', 'SELECT count(*) FROM events WHERE status <> ''Completed'' AND status <> ''Future'' AND (status=''In Progres'' OR status=''Started'' OR status=''Restarted'') and NODE_NAME is NOT NULL', '0', '3', 4, '#');
INSERT INTO pytsm.cfg_pytsm_overview (cfg_pytsm_overview_id, cfg_pytsm_base_name, cfg_pytsm_base_label, cfg_pytsm_base_sortorder, cfg_pytsm_base_alert_cmp, cfg_pytsm_base_alert_val, cfg_pytsm_base_alert_col, cfg_pytsm_overview_query, cfg_pytsm_overview_notforlibclient, cfg_pytsm_overview_pollfreq, cfg_pytsm_overview_parent_id, cfg_pytsm_overview_unit) VALUES (19, 'CFG_PYTSM_SCHEDULES_RUNNING_ADMIN', 'LB_PYTSM_SCHEDULES_RUNNING_ADMIN', 40, 'more', '0', 'warn', 'SELECT count(*) FROM events WHERE status <> ''Completed'' AND status <> ''Future'' AND (status=''In Progre%'' OR status=''Started'' OR status=''Restarted'') and NODE_NAME is NULL', '0', '3', 4, '#');