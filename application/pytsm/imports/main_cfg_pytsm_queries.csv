LB_PYTSM_QUERIES_ALL_NODES,,"select NODE_NAME, domain_name, platform_name, client_os_level, TCP_ADDRESS, trim(char(client_version)) ||'.'|| trim(char(client_release)) ||'.'|| trim(char(client_level))  ||'.'|| trim(char(client_sublevel)) as version from nodes"
LB_PYTSM_QUERIES_INACTIVE_NODES,,"select NODE_NAME, domain_name, platform_name, LASTACC_TIME from nodes where LASTACC_TIME < current_timestamp - 24 hours"
LB_PYTSM_QUERIES_FILESPACES,,"select a.node_name as NODENAME, b.filespace_name as FSNAME, substr(char(b.backup_end), 1, 10) as FS_LASTBACKUP from nodes a, filespaces b WHERE b.node_name=a.node_name"
LB_PYTSM_QUERIES_STALLED_FILESPACES,,"select node_name, filespace_name, backup_start, backup_end from filespaces where cast(day(current_timestamp-backup_end) as decimal) >= 3"
LB_PYTSM_QUERIES_SPACE_USAGE_/_NODE,,
LB_PYTSM_QUERIES_DATA_AND_TAPES_/_NODE,,"select vu.node_name, ao.total_mb, count(distinct vu.volume_name) as tapes, ao.total_mb/count(distinct vu.volume_name) as mbtape from volumeusage vu, auditocc ao where vu.node_name=ao.node_name group by vu.node_name, ao.total_mb"
LB_PYTSM_QUERIES_TAPES_USED_BY_NODE,,"select distinct node_name, volume_name,stgpool_name from volumeusage"
LB_PYTSM_QUERIES_SERVER_OVERVIEW,,"select SERVER_NAME, SERVER_HLA, SERVER_LLA, INSTALL_DATE, RESTART_DATE, AVAILABILITY, LASTLICENSEAUDIT, LICENSECOMPLIANCE, '-', CROSSDEFINE, PLATFORM, VERSION, RELEASE, LEVEL, SUBLEVEL from status"
LB_PYTSM_QUERIES_OTHER_SERVERS,,"select SERVER_NAME, HL_ADDRESS, LL_ADDRESS, DESCRIPTION, LASTACC_TIME from servers"
LB_PYTSM_QUERIES_DATABASE,,"select FREE_SPACE_MB, TOT_FILE_SYSTEM_MB, '', '', PAGE_SIZE, USABLE_PAGES, USED_PAGES, '', '', PHYSICAL_VOLUMES, '', TOTAL_BUFF_REQ, BUFF_HIT_RATIO, '', NUM_BACKUP_INCR, '', '', LAST_BACKUP_DATE, '', '' from db"
LB_PYTSM_QUERIES_MANAGEMENT_CLASSES,,"select DOMAIN_NAME, SET_NAME, CLASS_NAME, DEFAULTMC, DESCRIPTION from mgmtclasses"
LB_PYTSM_QUERIES_POLICY_SETS,,"select DOMAIN_NAME, SET_NAME, DEFMGMTCLASS, DESCRIPTION from policysets"
LB_PYTSM_QUERIES_DOMAINS,,"select DOMAIN_NAME, SET_LAST_ACTIVATED, DEFMGMTCLASS, NUM_NODES, BACKRETENTION, ARCHRETENTION, DESCRIPTION, ACTIVESTGPOOLS from domains"
LB_PYTSM_QUERIES_BACKUP_COPYGROUPS,,"SELECT domain_name, class_name, VEREXISTS, VERDELETED, RETEXTRA, RETONLY, destination FROM bu_copygroups WHERE set_name='ACTIVE'"
LB_PYTSM_QUERIES_ARCHIVE_COPYGROUPS,,"SELECT domain_name, class_name, retver, destination FROM ar_copygroups where set_name='ACTIVE'"
LB_PYTSM_QUERIES_DRIVES,,"select LIBRARY_NAME, DRIVE_NAME, DEVICE_TYPE, ONLINE, ELEMENT, DRIVE_STATE, ALLOCATED_TO, CLEAN_FREQ, DRIVE_SERIAL, VOLUME_NAME from drives"
LB_PYTSM_QUERIES_PATHS,,"select SOURCE_NAME, SOURCE_TYPE, DESTINATION_NAME, DESTINATION_TYPE, LIBRARY_NAME, NODE_NAME, DEVICE, EXTERNAL_MANAGER, LUN, DIRECTORY, ONLINE from paths"
LB_PYTSM_QUERIES_DISASTER_RECOVERY_MEDIA,,"select VOLUME_NAME, STGPOOL_NAME, LIB_NAME, VOLTYPE, UPD_DATE, LOCATION, STATE from drmedia"
LB_PYTSM_QUERIES_BACKUP_STATUS_/_24H,,"select Entity, Successful, cast(float(sum(bytes))/1024/1024/1024 as dec(8,3)) as GB, Examined, Affected, Failed from summary where activity='BACKUP' and cast(hour(current_timestamp-start_time) as decimal(8,0)) < 24 group by Entity,Successful,Examined,AFFECTED,Failed"
LB_PYTSM_QUERIES_BACKUP_TIMES,,"SELECT entity AS ""Node_name"", CAST(sum(bytes/1024/1024/1024) AS decimal(8,3)) AS ""GB_xfer"", start_time, end_time, END_TIME-START_TIME as duration, comm_wait, Affected, Failed, Successful FROM summary WHERE activity='BACKUP' group by start_time, end_time, Successful,Examined,Affected,Failed,entity,comm_wait"
LB_PYTSM_QUERIES_BACKUP_TIMES_/_24H,,"SELECT entity AS ""Node_name"", CAST(sum(bytes/1024/1024/1024) AS decimal(8,3)) AS ""GB_xfer"", start_time, end_time, END_TIME-START_TIME as duration, comm_wait, Affected, Failed, Successful FROM summary WHERE activity='BACKUP' AND start_time>=current_timestamp - 24 hours group by start_time, end_time, Successful,Examined,Affected,Failed,entity,comm_wait"
LB_PYTSM_QUERIES_ARCHIVE_STATUS_/_24H,,"select Entity, Successful, cast(float(sum(bytes))/1024/1024/1024 as dec(8,3)) as GB, Examined, Affected, Failed from summary where activity='ARCHIVE' and cast(hour(current_timestamp-start_time) as decimal(8,0)) < 24 group by Entity,Successful,Examined,AFFECTED,Failed"
LB_PYTSM_QUERIES_ARCHIVE_TIMES,,"SELECT entity AS ""Node_name"", CAST(sum(bytes/1024/1024/1024) AS decimal(8,3)) AS ""GB_xfer"", start_time, end_time, END_TIME-START_TIME as duration, comm_wait, Affected, Failed, Successful FROM summary WHERE activity='ARCHIVE' group by start_time, end_time, Successful,Examined,Affected,Failed,entity,comm_wait"
LB_PYTSM_QUERIES_ARCHIVE_TIMES_/_24H,,"SELECT entity AS ""Node_name"", CAST(sum(bytes/1024/1024/1024) AS decimal(8,3)) AS ""GB_xfer"", start_time, end_time, END_TIME-START_TIME as duration, comm_wait, Affected, Failed, Successful FROM summary WHERE activity='ARCHIVE' AND start_time>=current_timestamp - 24 hours group by start_time, end_time, Successful,Examined,Affected,Failed,entity,comm_wait"
LB_PYTSM_QUERIES_CLIENT_SCHEDULES_DEFINITIONS,,"select schedule_name, domain_name, description, action, priority, starttime, period, perunits, dayofweek, sched_style from client_schedules"
LB_PYTSM_QUERIES_CLIENT_SCHEDULES_RESULTS,,"select node_name, schedule_name, scheduled_start, ACTUAL_START,COMPLETED, status, result, reason from events where scheduled_start >= current_timestamp - 24 hours and node_name != '' and status != 'Future' and status != 'Started' and status != 'Pending'"
LB_PYTSM_QUERIES_ADMIN_SCHEDULES_DEFINITIONS,,"select schedule_name, command, description, active, priority, starttime, period, perunits, dayofweek, sched_style from admin_schedules"
LB_PYTSM_QUERIES_ADMIN_SCHEDULES_RESULTS,,"select schedule_name, scheduled_start, ACTUAL_START,COMPLETED,status, result, reason from events where scheduled_start >= current_timestamp - 24 hours and node_name is null and status != 'Future' and status != 'Started' and status != 'Pending'"
LB_PYTSM_QUERIES_ASSOSSIATIONS,,"select domain_NAME, schedule_name, node_name, chg_time from associations"
LB_PYTSM_QUERIES_MIGRATION,,"SELECT ENTITY, Activity, Start_Time as ""Start_Time"", End_Time, END_TIME-START_TIME as duration, Examined, Affected, cast((BYTES/1048576)/1024 as decimal(12,3)) as GB, FAILED, Mediaw, Processes, Successful FROM ADSM.SUMMARY where ACTIVITY like upper('MIGRATION') and date(start_time) >= current_date -1 days"
LB_PYTSM_QUERIES_RUNNING_PROCESSES,,"SELECT process_num, process, substr(char(start_time),1,19) AS START_TIME, substr(char(current_timestamp - start_time),1,10) as duration, cast(float(bytes_processed) /1024/1024 AS DEC(8,2)) AS MB, cast((cast(bytes_processed as dec(18,0))/cast((current_timestamp-start_time) seconds as decimal(18,0))) / 1024 / 1024 AS DEC (18,2)) as MBs, status FROM processes"
LB_PYTSM_QUERIES_ACTIVE_SESSIONS,,"select SESSION_ID, substr(char(start_time),1,19) AS START_TIME, STATE, WAIT_SECONDS, cast(float(sum(BYTES_SENT))/1024/1024/1024 as dec(8,3)) as BSEND, cast(float(sum(BYTES_RECEIVED))/1024/1024/1024 as dec(8,3)) as received, CLIENT_NAME,CLIENT_PLATFORM, OUTPUT_VOL_ACCESS, INPUT_VOL_ACCESS, MOUNT_POINT_WAIT from sessions group by SESSION_ID, START_TIME, STATE, WAIT_SECONDS, CLIENT_NAME, INPUT_VOL_ACCESS, OUTPUT_VOL_ACCESS, MOUNT_POINT_WAIT, CLIENT_PLATFORM"
LB_PYTSM_QUERIES_MOUNT_STATUS,,"select LIBRARY_NAME, DRIVE_NAME, DRIVE_STATE, VOLUME_NAME, ALLOCATED_TO from drives where VOLUME_NAME is not null"
LB_PYTSM_QUERIES_MOUNT_HISTORY,,"select DRIVE_NAME, START_TIME, END_TIME from summary where DRIVE_NAME <>'' and end_time >=current_timestamp - 24 hours"
LB_PYTSM_QUERIES_WARNINGS,,"select DATE_TIME, MESSAGE from actlog where SEVERITY='W' "
LB_PYTSM_QUERIES_ERRORS,,"select DATE_TIME, MESSAGE from actlog where SEVERITY='E' "
LB_PYTSM_QUERIES_FREE_TAPES,,select count(*)Scratch from libvolumes where status='Scratch'
LB_PYTSM_QUERIES_FREE_TAPES_/_POOL,,"SELECT STGPOOLS.STGPOOL_NAME, STGPOOLS.MAXSCRATCH, Count(STGPOOLS.MAXSCRATCH) as ""Allocated_SCRATCH"", STGPOOLS.MAXSCRATCH-count(STGPOOLS.MAXSCRATCH) as ""Remaining_SCRATCH"" FROM STGPOOLS,VOLUMES WHERE (VOLUMES.STGPOOL_NAME = STGPOOLS.STGPOOL_NAME) AND ((STGPOOLS.DEVCLASS='LTO3DEVCL')) GROUP BY STGPOOLS.STGPOOL_NAME, STGPOOLS.MAXSCRATCH"
LB_PYTSM_QUERIES_STORAGEPOOLS,,"select STGPOOL_NAME, DEVCLASS, EST_CAPACITY_MB, PCT_UTILIZED, PCT_MIGR, HIGHMIG, LOWMIG, MIGR_RUNNING, NEXTSTGPOOL from stgpools"
LB_PYTSM_QUERIES_SPACE_RECLAMATION,,"select volume_name, pct_reclaim, stgpool_name from volumes where pct_reclaim >= 60"
LB_PYTSM_QUERIES_ERROR_TAPES,,"select VOLUME_NAME, ACCESS from volumes where access !='READWRITE'"
LB_PYTSM_QUERIES_VOLUMES,,"select volume_name, stgpool_name, est_capacity_mb, pct_utilized, status, access, error_state, write_errors, read_errors from volumes"
LB_PYTSM_QUERIES_LIBRARY_VOLUMES,,"select LIBRARY_NAME, VOLUME_NAME, STATUS, OWNER, LAST_USE, DEVTYPE, MEDIATYPE from libvolumes"
LB_PYTSM_QUERIES_BACKUPSETS,,"select NODE_NAME, BACKUPSET_NAME, DATE_TIME, DESCRIPTION from backupsets"
LB_PYTSM_QUERIES_EXPORTS,,"select DATE_TIME, VOLUME_SEQ, DEVCLASS, VOLUME_NAME, LOCATION, COMMAND from volhistory where TYPE='EXPORT'"
LB_PYTSM_QUERIES_OFFSITE_TAPES,,"select VOLUME_NAME, TYPE, VOLUME_SEQ, DATE_TIME, COMMAND from volhistory where type='BACKUPSET' or type='EXPORT' and volume_name not in (select volume_name from libvolumes)"
